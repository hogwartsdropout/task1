#app
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoshowroom
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoshowroom
  template:
    metadata:
      labels:
        app: autoshowroom
    spec:
      containers:
        - name: autoshowroom
          image: cr.yandex/crp329gu3h4tnvmvff3b/autoshowroom:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
            - containerPort: 6565
          env:
            - name: spring.datasource.url
              value: jdbc:postgresql://db-clusterip/restored
            - name: spring.datasource.username
              value: postgres
            - name: spring.datasource.password
              value: RAPtor1234
            - name: kafka.bootstrapAddress
              value: "notkafka:9092"
            - name: kafka.group
              value: autoshowroom
---
# App load-balancer
apiVersion: v1
kind: Service
metadata:
  name: app-lb
  labels:
    app: autoshowroom
spec:
  selector:
    app: autoshowroom
  ports:
    - name: api
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer
---
# App clusterIP
apiVersion: v1
kind: Service
metadata:
  name: autoshowroom-clusterip
  labels:
    app: autoshowroom
spec:
  selector:
    app: autoshowroom
  ports:
    - name: api
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: grpc
  labels:
    app: autoshowroom
spec:
  selector:
    app: autoshowroom
  ports:
    - name: grpc
      protocol: TCP
      port: 6565
      targetPort: 6565
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: potgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: RAPtor1234
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql
      volumes:
        - name: db-data
          persistentVolumeClaim:
            claimName: db-data
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: db-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: db-lb
#spec:
#  selector:
#    app: db
#  ports:
#    - protocol: TCP
#      port: 5432
#      targetPort: 5432
#  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: db-clusterip
  labels:
    app: db
spec:
  selector:
    app: db
  ports:
    - name: api
      protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notkafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notkafka
  template:
    metadata:
      labels:
        app: notkafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://notkafka:9092"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - name: api
      protocol: TCP
      port: 2181
      targetPort: 2181
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: notkafka
  labels:
    app: notkafka
spec:
  selector:
    app: notkafka
  ports:
    - name: api
      protocol: TCP
      port: 9092
      targetPort: 9092
  type: ClusterIP
---