plugins {
    id 'groovy'
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'com.google.protobuf' version '0.8.8'
}



archivesBaseName = 'groovyserver'
version = '1.0'
repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.1.7.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra:2.1.7.RELEASE'
    compile 'io.github.lognet:grpc-spring-boot-starter:3.3.0'
    implementation 'org.springframework.kafka:spring-kafka:2.2.7.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
jar {

    manifest {
        attributes 'Main-Class': 'com.example.gs.app.Main'
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/source/proto"
        }
    }
}
protobuf {
    protoc {
        // The artifact spec for the Protobuf Compiler
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        // Optional: an artifact spec for a protoc plugin, with "grpc" as
        // the identifier, which can be referred to in the "plugins"
        // container of the "generateProtoTasks" closure.
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.21.0'
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            // Apply the "grpc" plugin whose spec is defined above, without
            // options.  Note the braces cannot be omitted, otherwise the
            // plugin will not be added. This is because of the implicit way
            // NamedDomainObjectContainer binds the methods.
            grpc { }
        }
    }
}